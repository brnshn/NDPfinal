
import java.io.BufferedWriter;
import java.io.BufferedReader;
import java.io.FileWriter;
import java.io.FileReader;
import java.io.IOException;
import javax.swing.DefaultListModel;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;

public class StudentRegistryForm extends JFrame {

    /**
     * Creates new form StudentRegistryForm
     */
    // variable for filling combobox data
    private final JComboBox<String> studentClassesComboboxmodel = new JComboBox<>();

    // method for filling the combobox with csv file data
    private JComboBox<String> loadDataFromFile() {
        String fileName = "class_data.csv";

        try (BufferedReader br = new BufferedReader(new FileReader(fileName))) {
            // Read the first line to check if the file has data
            String line;
            br.readLine();
            while ((line = br.readLine()) != null) {
                String[] data = line.split(",");
                // add each line to the variable
                studentClassesComboboxmodel.addItem(data[0]);
            }
            return studentClassesComboboxmodel;

        } catch (IOException e) {
            e.printStackTrace();
        }
        return null;
    }

    
    public StudentRegistryForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        studentNameLabel = new javax.swing.JLabel();
        studentNameText = new javax.swing.JTextField();
        studentSurnameLabel = new javax.swing.JLabel();
        studentSurnameText = new javax.swing.JTextField();
        studentNumberLabel = new javax.swing.JLabel();
        saveButton = new javax.swing.JButton();
        studentDepartmentLabel = new javax.swing.JLabel();
        studentDepartmentText = new javax.swing.JTextField();
        studentClassesLabel = new javax.swing.JLabel();
        studentClassesCombobox = new javax.swing.JComboBox<>();
        studentNumberText = new javax.swing.JTextField();
        searchBox = new javax.swing.JTextField();
        searchBoxButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        searchResultList = new javax.swing.JList<>();
        searchBoxLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Öğrenci Kayıt Formu");

        studentNameLabel.setText("Öğrenci Adı:");

        studentSurnameLabel.setText("Öğrenci Soyadı:");

        studentNumberLabel.setText("Öğrenci No:");

        saveButton.setText("Kaydet");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        studentDepartmentLabel.setText("Öğrenci Bölümü: ");

        studentClassesLabel.setText("Öğrenci Dersleri:");

        studentClassesCombobox.setModel(loadDataFromFile().getModel());

        searchBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBoxActionPerformed(evt);
            }
        });

        searchBoxButton.setText("Arama");
        searchBoxButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBoxButtonActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(searchResultList);

        searchBoxLabel.setText("Öğrenci Adı ile Arama:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(78, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(saveButton)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(studentNameLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                            .addComponent(studentNumberLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                            .addComponent(studentSurnameLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(studentDepartmentLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(studentClassesLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                            .addComponent(searchBoxLabel, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(studentDepartmentText, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)
                                    .addComponent(studentNameText, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                                    .addComponent(studentSurnameText, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                                    .addComponent(studentClassesCombobox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(studentNumberText, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchBox, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(13, 13, 13)
                                .addComponent(searchBoxButton, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(57, 57, 57))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {studentClassesLabel, studentDepartmentLabel, studentNameLabel, studentNumberLabel, studentSurnameLabel});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {studentDepartmentText, studentNameText, studentSurnameText});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBoxButton)
                    .addComponent(searchBoxLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(studentNumberLabel)
                    .addComponent(studentNumberText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(studentNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(studentNameLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(studentSurnameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(studentSurnameLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(studentDepartmentText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(studentDepartmentLabel))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(studentClassesLabel)
                    .addComponent(studentClassesCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(107, 107, 107)
                .addComponent(saveButton)
                .addGap(21, 21, 21))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {studentClassesLabel, studentDepartmentLabel, studentNameLabel, studentSurnameLabel});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {studentDepartmentText, studentNameText, studentSurnameText});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // method for saving inputs to the csv file
    private void saveToCSV(OgrenciClass ogrenci) {
        String fileName = "student_data.csv";
        boolean isFileEmpty = false;
        try (BufferedReader br = new BufferedReader(new FileReader(fileName))) {
            // Read the first line to check if the file has data
            String line = br.readLine();
            if (line == null || line.isEmpty()) {
                isFileEmpty = true;
            }

        } catch (IOException e) {
            isFileEmpty = true;
        }

        try (BufferedWriter writer = new BufferedWriter(new FileWriter(fileName, true));) {

            // check for if the file is empty
            if (isFileEmpty) {
                writer.write("Ogrenci No,Ogrenci Ad,Ogrenci Soyad,Ogrenci Bolum,Ogrenci Dersler");
                writer.newLine();
            }
            // Append data to the CSV file
            writer.write(ogrenci.getOgrenciNo() + "," + ogrenci.getOgrenciAd() + ","
                    + ogrenci.getOgrenciSoyad() + "," + ogrenci.getOgrenciBolum() + "," + ogrenci.getOgrenciDersler());
            writer.newLine();

            JOptionPane.showMessageDialog(this, "Bilgiler başarıyla kaydedildi", "Success", JOptionPane.INFORMATION_MESSAGE);

        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Bilgileri dosyaya kaydederken hata oluştu", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    // method for clearin the input fields
    private void clearFields() {
        studentNumberText.setText(null);
        studentNameText.setText(null);
        studentSurnameText.setText(null);
        studentDepartmentText.setText(null);
    }

    // method for save button action to save to csv file
    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        String studentNumber = studentNumberText.getText();
        String studentName = studentNameText.getText();
        String studentSurname = studentSurnameText.getText();
        String studentDepartment = studentDepartmentText.getText();
        String studentClasses = (String) studentClassesCombobox.getSelectedItem();

        // Check if any of the fields is empty
        if (studentNumber.isEmpty() || studentName.isEmpty() || studentSurname.isEmpty() || studentDepartment.isEmpty() || studentClasses == null) {
            JOptionPane.showMessageDialog(this, "Lütfen bütün boşlukları doldurunuz", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Create a OgrenciClass instance
        OgrenciClass ogrenci = new OgrenciClass(studentNumber, studentName, studentSurname, studentDepartment, studentClasses);

        // Save data to CSV file
        saveToCSV(ogrenci);

        // Clear the text fields after the save
        clearFields();
    }//GEN-LAST:event_saveButtonActionPerformed

    private void searchBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchBoxActionPerformed

     // method for searchbox button
    private void searchBoxButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBoxButtonActionPerformed
        String searchValue = searchBox.getText();
        
        if (searchValue.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Arama kutusunu doldurunuz", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        
        DefaultListModel<String> resultListModel = new DefaultListModel<>();
        String fileName = "student_data.csv";
        
        try (BufferedReader br = new BufferedReader(new FileReader(fileName))) {
            
            String line;
            line = br.readLine();
            resultListModel.addElement(line);
            
            while ((line = br.readLine()) != null) {
                String[] parts = line.split(",");
                String ogrenciAd = parts[1].trim();
                
                if (ogrenciAd.toLowerCase().contains(searchValue.toLowerCase())) {
                    resultListModel.addElement(line);
                }
            }
            
            if (resultListModel.size() <= 1) {
                JOptionPane.showMessageDialog(this, "Öğrenci bulunamadı", "Bilgi", JOptionPane.INFORMATION_MESSAGE);
            } else {
                searchResultList.setModel(resultListModel);
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Dosya okuma hatası", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_searchBoxButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentRegistryForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentRegistryForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentRegistryForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentRegistryForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentRegistryForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton saveButton;
    private javax.swing.JTextField searchBox;
    private javax.swing.JButton searchBoxButton;
    private javax.swing.JLabel searchBoxLabel;
    private javax.swing.JList<String> searchResultList;
    private javax.swing.JComboBox<String> studentClassesCombobox;
    private javax.swing.JLabel studentClassesLabel;
    private javax.swing.JLabel studentDepartmentLabel;
    private javax.swing.JTextField studentDepartmentText;
    private javax.swing.JLabel studentNameLabel;
    private javax.swing.JTextField studentNameText;
    private javax.swing.JLabel studentNumberLabel;
    private javax.swing.JTextField studentNumberText;
    private javax.swing.JLabel studentSurnameLabel;
    private javax.swing.JTextField studentSurnameText;
    // End of variables declaration//GEN-END:variables

    // Class for the StudentRegistryForm input fields
    private static class OgrenciClass {

        // variable of the class
        private String ogrenciNo;
        private String ogrenciAd;
        private String ogrenciSoyad;
        private String ogrenciBolum;
        private String ogrenciDersler;

        // constructor of the Class
        public OgrenciClass(String ogrenciNo, String ogrenciAd, String ogrenciSoyad, String ogrenciBolum, String ogrenciDersler) {
            this.ogrenciNo = ogrenciNo;
            this.ogrenciAd = ogrenciAd;
            this.ogrenciSoyad = ogrenciSoyad;
            this.ogrenciBolum = ogrenciBolum;
            this.ogrenciDersler = ogrenciDersler;
        }

        // get method for the ogrenciNo variable
        private String getOgrenciNo() {
            return ogrenciNo;
        }

        // get method for the ogrenciAd variable
        private String getOgrenciAd() {
            return ogrenciAd;
        }

        // get method for the ogrenciSoyad variable
        private String getOgrenciSoyad() {
            return ogrenciSoyad;
        }

        // get method for the ogrenciBolum variable
        private String getOgrenciBolum() {
            return ogrenciBolum;
        }

        // get method for the ogrenciDersler variable
        private String getOgrenciDersler() {
            return ogrenciDersler;
        }

    }
}
